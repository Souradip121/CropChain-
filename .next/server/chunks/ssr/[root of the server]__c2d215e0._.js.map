{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SUBINOY/Desktop/CropChain/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SUBINOY/Desktop/CropChain/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SUBINOY/Desktop/CropChain/src/utils/web3.ts"],"sourcesContent":["\r\nimport { useState, useEffect } from 'react';\r\n\r\n// Mock contract addresses for our app\r\nexport const CONTRACT_ADDRESSES = {\r\n  yieldToken: '0x1234567890123456789012345678901234567890',\r\n  marketplace: '0x0987654321098765432109876543210987654321',\r\n  riskManagement: '0x5432109876543210987654321098765432109876',\r\n};\r\n\r\n// Types\r\nexport type TokenData = {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  cropType: string;\r\n  projectedYield: number;\r\n  price: number;\r\n  farmerId: string;\r\n  harvestDate: string;\r\n  riskLevel: 'Low' | 'Medium' | 'High';\r\n  location: string;\r\n  image: string;\r\n  totalSupply: number;\r\n  availableSupply: number;\r\n};\r\n\r\nexport type WalletState = {\r\n  isConnected: boolean;\r\n  address: string | null;\r\n  balance: number;\r\n  network: string | null;\r\n};\r\n\r\n// Mock function for connecting wallet\r\nexport async function connectWallet(): Promise<WalletState> {\r\n  return new Promise((resolve) => {\r\n    // Simulate network request\r\n    setTimeout(() => {\r\n      // Generate random wallet data (in a real app, this would use ethers.js or web3.js)\r\n      const randomAddress = '0x' + Math.random().toString(16).substring(2, 42);\r\n      const randomBalance = parseFloat((Math.random() * 10).toFixed(4));\r\n      \r\n      resolve({\r\n        isConnected: true,\r\n        address: randomAddress,\r\n        balance: randomBalance,\r\n        network: 'Ethereum',\r\n      });\r\n    }, 1000);\r\n  });\r\n}\r\n\r\n// Hook for wallet connection\r\nexport function useWalletConnection() {\r\n  const [walletState, setWalletState] = useState<WalletState>({\r\n    isConnected: false,\r\n    address: null,\r\n    balance: 0,\r\n    network: null,\r\n  });\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const connect = async () => {\r\n    try {\r\n      setIsConnecting(true);\r\n      setError(null);\r\n      const result = await connectWallet();\r\n      setWalletState(result);\r\n      localStorage.setItem('cropchain_wallet_connected', 'true');\r\n    } catch (err) {\r\n      console.error('Error connecting wallet:', err);\r\n      setError('Failed to connect wallet. Please try again.');\r\n    } finally {\r\n      setIsConnecting(false);\r\n    }\r\n  };\r\n\r\n  const disconnect = () => {\r\n    setWalletState({\r\n      isConnected: false,\r\n      address: null,\r\n      balance: 0,\r\n      network: null,\r\n    });\r\n    localStorage.removeItem('cropchain_wallet_connected');\r\n  };\r\n\r\n  // Check for existing connection on mount\r\n  useEffect(() => {\r\n    const isConnected = localStorage.getItem('cropchain_wallet_connected') === 'true';\r\n    if (isConnected) {\r\n      connect();\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    ...walletState,\r\n    connect,\r\n    disconnect,\r\n    isConnecting,\r\n    error,\r\n  };\r\n}\r\n\r\n// Mock function to get all available tokens\r\nexport async function fetchAvailableTokens(): Promise<TokenData[]> {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      const tokens: TokenData[] = [\r\n        {\r\n          id: 'corn-2024-01',\r\n          name: 'Midwest Corn Yield 2024',\r\n          symbol: 'CORN24',\r\n          cropType: 'Corn',\r\n          projectedYield: 180,\r\n          price: 0.025,\r\n          farmerId: 'farmer-01',\r\n          harvestDate: '2024-09-15',\r\n          riskLevel: 'Low',\r\n          location: 'Iowa, USA',\r\n          image: '/corn.jpg',\r\n          totalSupply: 10000,\r\n          availableSupply: 7500,\r\n        },\r\n        {\r\n          id: 'wheat-2024-01',\r\n          name: 'Kansas Wheat Yield 2024',\r\n          symbol: 'WHEAT24',\r\n          cropType: 'Wheat',\r\n          projectedYield: 80,\r\n          price: 0.018,\r\n          farmerId: 'farmer-02',\r\n          harvestDate: '2024-07-20',\r\n          riskLevel: 'Medium',\r\n          location: 'Kansas, USA',\r\n          image: '/wheat.jpg',\r\n          totalSupply: 8000,\r\n          availableSupply: 3200,\r\n        },\r\n        {\r\n          id: 'soy-2024-01',\r\n          name: 'Illinois Soybean Yield 2024',\r\n          symbol: 'SOY24',\r\n          cropType: 'Soybean',\r\n          projectedYield: 65,\r\n          price: 0.022,\r\n          farmerId: 'farmer-03',\r\n          harvestDate: '2024-10-05',\r\n          riskLevel: 'Low',\r\n          location: 'Illinois, USA',\r\n          image: '/soybean.jpg',\r\n          totalSupply: 15000,\r\n          availableSupply: 9800,\r\n        },\r\n        {\r\n          id: 'rice-2024-01',\r\n          name: 'California Rice Yield 2024',\r\n          symbol: 'RICE24',\r\n          cropType: 'Rice',\r\n          projectedYield: 95,\r\n          price: 0.032,\r\n          farmerId: 'farmer-04',\r\n          harvestDate: '2024-08-30',\r\n          riskLevel: 'Medium',\r\n          location: 'California, USA',\r\n          image: '/rice.jpg',\r\n          totalSupply: 5000,\r\n          availableSupply: 2100,\r\n        },\r\n        {\r\n          id: 'cotton-2024-01',\r\n          name: 'Texas Cotton Yield 2024',\r\n          symbol: 'CTTN24',\r\n          cropType: 'Cotton',\r\n          projectedYield: 110,\r\n          price: 0.027,\r\n          farmerId: 'farmer-05',\r\n          harvestDate: '2024-11-10',\r\n          riskLevel: 'High',\r\n          location: 'Texas, USA',\r\n          image: '/cotton.jpg',\r\n          totalSupply: 7000,\r\n          availableSupply: 4600,\r\n        },\r\n      ];\r\n      resolve(tokens);\r\n    }, 1500);\r\n  });\r\n}\r\n\r\n// Mock function for purchasing tokens\r\nexport async function purchaseTokens(tokenId: string, amount: number): Promise<boolean> {\r\n  return new Promise((resolve) => {\r\n    // Simulate network delay and transaction\r\n    setTimeout(() => {\r\n      // 90% success rate\r\n      const success = Math.random() > 0.1;\r\n      resolve(success);\r\n    }, 2000);\r\n  });\r\n}\r\n\r\n// Mock function for creating new tokens (for farmers)\r\nexport async function createNewToken(tokenData: Omit<TokenData, 'id'>): Promise<TokenData> {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      const newToken: TokenData = {\r\n        ...tokenData,\r\n        id: `${tokenData.cropType.toLowerCase()}-${Date.now()}`,\r\n      };\r\n      resolve(newToken);\r\n    }, 2000);\r\n  });\r\n}\r\n\r\n// Mock function for getting user's token portfolio\r\nexport async function fetchUserPortfolio(address: string): Promise<{\r\n  tokens: (TokenData & { amount: number })[];\r\n  totalValue: number;\r\n  projectedReturn: number;\r\n}> {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      // Create a random portfolio based on some of the tokens\r\n      const allTokens = [\r\n        {\r\n          id: 'corn-2024-01',\r\n          name: 'Midwest Corn Yield 2024',\r\n          symbol: 'CORN24',\r\n          cropType: 'Corn',\r\n          projectedYield: 180,\r\n          price: 0.025,\r\n          farmerId: 'farmer-01',\r\n          harvestDate: '2024-09-15',\r\n          riskLevel: 'Low' as const,\r\n          location: 'Iowa, USA',\r\n          image: '/corn.jpg',\r\n          totalSupply: 10000,\r\n          availableSupply: 7500,\r\n          amount: Math.floor(Math.random() * 1000)\r\n        },\r\n        {\r\n          id: 'wheat-2024-01',\r\n          name: 'Kansas Wheat Yield 2024',\r\n          symbol: 'WHEAT24',\r\n          cropType: 'Wheat',\r\n          projectedYield: 80,\r\n          price: 0.018,\r\n          farmerId: 'farmer-02',\r\n          harvestDate: '2024-07-20',\r\n          riskLevel: 'Medium' as const,\r\n          location: 'Kansas, USA',\r\n          image: '/wheat.jpg',\r\n          totalSupply: 8000,\r\n          availableSupply: 3200,\r\n          amount: Math.floor(Math.random() * 800)\r\n        },\r\n        {\r\n          id: 'soy-2024-01',\r\n          name: 'Illinois Soybean Yield 2024',\r\n          symbol: 'SOY24',\r\n          cropType: 'Soybean',\r\n          projectedYield: 65,\r\n          price: 0.022,\r\n          farmerId: 'farmer-03',\r\n          harvestDate: '2024-10-05',\r\n          riskLevel: 'Low' as const,\r\n          location: 'Illinois, USA',\r\n          image: '/soybean.jpg',\r\n          totalSupply: 15000,\r\n          availableSupply: 9800,\r\n          amount: Math.floor(Math.random() * 1500)\r\n        }\r\n      ];\r\n      \r\n      // Calculate total value and projected return\r\n      const totalValue = allTokens.reduce((sum, token) => sum + token.amount * token.price, 0);\r\n      const projectedReturn = allTokens.reduce((sum, token) => sum + token.amount * token.price * (1 + token.projectedYield/1000), 0);\r\n      \r\n      resolve({\r\n        tokens: allTokens,\r\n        totalValue,\r\n        projectedReturn\r\n      });\r\n    }, 1500);\r\n  });\r\n}\r\n\r\n// Mock function for marketplace trends\r\nexport async function fetchMarketTrends(): Promise<{\r\n  volumeData: { date: string; value: number }[];\r\n  priceData: { date: string; value: number }[];\r\n  popularTokens: string[];\r\n}> {\r\n  return new Promise((resolve) => {\r\n    const dates = Array.from({ length: 30 }, (_, i) => {\r\n      const d = new Date();\r\n      d.setDate(d.getDate() - (30 - i));\r\n      return d.toISOString().split('T')[0];\r\n    });\r\n    \r\n    // Generate some trend data\r\n    const volumeData = dates.map(date => ({\r\n      date,\r\n      value: 10000 + Math.random() * 5000 + (parseInt(date.split('-')[2]) * 200)\r\n    }));\r\n    \r\n    const priceData = dates.map(date => ({\r\n      date,\r\n      value: 0.02 + Math.random() * 0.005 + (parseInt(date.split('-')[2]) * 0.0003)\r\n    }));\r\n    \r\n    const popularTokens = ['CORN24', 'WHEAT24', 'SOY24'];\r\n    \r\n    resolve({\r\n      volumeData,\r\n      priceData,\r\n      popularTokens\r\n    });\r\n  });\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 398, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SUBINOY/Desktop/CropChain/src/hooks/use-toast.ts"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport type {\r\n  ToastActionElement,\r\n  ToastProps,\r\n} from \"@/components/ui/use-toast\"\r\n\r\nconst TOAST_LIMIT = 1\r\nconst TOAST_REMOVE_DELAY = 1000000\r\n\r\ntype ToasterToast = ToastProps & {\r\n  id: string\r\n  title?: React.ReactNode\r\n  description?: React.ReactNode\r\n  action?: ToastActionElement\r\n}\r\n\r\nconst actionTypes = {\r\n  ADD_TOAST: \"ADD_TOAST\",\r\n  UPDATE_TOAST: \"UPDATE_TOAST\",\r\n  DISMISS_TOAST: \"DISMISS_TOAST\",\r\n  REMOVE_TOAST: \"REMOVE_TOAST\",\r\n} as const\r\n\r\nlet count = 0\r\n\r\nfunction genId() {\r\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\r\n  return count.toString()\r\n}\r\n\r\ntype ActionType = typeof actionTypes\r\n\r\ntype Action =\r\n  | {\r\n      type: ActionType[\"ADD_TOAST\"]\r\n      toast: ToasterToast\r\n    }\r\n  | {\r\n      type: ActionType[\"UPDATE_TOAST\"]\r\n      toast: Partial<ToasterToast>\r\n    }\r\n  | {\r\n      type: ActionType[\"DISMISS_TOAST\"]\r\n      toastId?: ToasterToast[\"id\"]\r\n    }\r\n  | {\r\n      type: ActionType[\"REMOVE_TOAST\"]\r\n      toastId?: ToasterToast[\"id\"]\r\n    }\r\n\r\ninterface State {\r\n  toasts: ToasterToast[]\r\n}\r\n\r\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\r\n\r\nconst addToRemoveQueue = (toastId: string) => {\r\n  if (toastTimeouts.has(toastId)) {\r\n    return\r\n  }\r\n\r\n  const timeout = setTimeout(() => {\r\n    toastTimeouts.delete(toastId)\r\n    dispatch({\r\n      type: \"REMOVE_TOAST\",\r\n      toastId: toastId,\r\n    })\r\n  }, TOAST_REMOVE_DELAY)\r\n\r\n  toastTimeouts.set(toastId, timeout)\r\n}\r\n\r\nexport const reducer = (state: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case \"ADD_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\r\n      }\r\n\r\n    case \"UPDATE_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\r\n        ),\r\n      }\r\n\r\n    case \"DISMISS_TOAST\": {\r\n      const { toastId } = action\r\n\r\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\r\n      // but I'll keep it here for simplicity\r\n      if (toastId) {\r\n        addToRemoveQueue(toastId)\r\n      } else {\r\n        state.toasts.forEach((toast) => {\r\n          addToRemoveQueue(toast.id)\r\n        })\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === toastId || toastId === undefined\r\n            ? {\r\n                ...t,\r\n                open: false,\r\n              }\r\n            : t\r\n        ),\r\n      }\r\n    }\r\n    case \"REMOVE_TOAST\":\r\n      if (action.toastId === undefined) {\r\n        return {\r\n          ...state,\r\n          toasts: [],\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\r\n      }\r\n  }\r\n}\r\n\r\nconst listeners: Array<(state: State) => void> = []\r\n\r\nlet memoryState: State = { toasts: [] }\r\n\r\nfunction dispatch(action: Action) {\r\n  memoryState = reducer(memoryState, action)\r\n  listeners.forEach((listener) => {\r\n    listener(memoryState)\r\n  })\r\n}\r\n\r\ntype Toast = Omit<ToasterToast, \"id\">\r\n\r\nfunction toast({ ...props }: Toast) {\r\n  const id = genId()\r\n\r\n  const update = (props: ToasterToast) =>\r\n    dispatch({\r\n      type: \"UPDATE_TOAST\",\r\n      toast: { ...props, id },\r\n    })\r\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\r\n\r\n  dispatch({\r\n    type: \"ADD_TOAST\",\r\n    toast: {\r\n      ...props,\r\n      id,\r\n      open: true,\r\n      onOpenChange: (open) => {\r\n        if (!open) dismiss()\r\n      },\r\n    },\r\n  })\r\n\r\n  return {\r\n    id: id,\r\n    dismiss,\r\n    update,\r\n  }\r\n}\r\n\r\nfunction useToast() {\r\n  const [state, setState] = React.useState<State>(memoryState)\r\n\r\n  React.useEffect(() => {\r\n    listeners.push(setState)\r\n    return () => {\r\n      const index = listeners.indexOf(setState)\r\n      if (index > -1) {\r\n        listeners.splice(index, 1)\r\n      }\r\n    }\r\n  }, [state])\r\n\r\n  return {\r\n    ...state,\r\n    toast,\r\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\r\n  }\r\n}\r\n\r\nexport { useToast, toast }\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 552, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SUBINOY/Desktop/CropChain/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content>) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <DialogPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\n          <XIcon />\n          <span className=\"sr-only\">Close</span>\n        </DialogPrimitive.Close>\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,8OAAC,kKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;AAEA,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,8OAAC,kKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;AAEA,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBAAO,8OAAC,kKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,8OAAC,kKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,8OAAC,kKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,GAAG,OACkD;IACrD,qBACE,8OAAC;QAAa,aAAU;;0BACtB,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,gMAAA,CAAA,QAAK;;;;;0CACN,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKpC;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,kKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 725, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SUBINOY/Desktop/CropChain/src/components/WalletConnect.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { useWalletConnection } from '@/utils/web3';\r\nimport { Button } from '@/components/ui/button';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\r\nimport { Wallet, LogOut, Copy, CheckCheck } from 'lucide-react';\r\n\r\nexport function WalletConnect() {\r\n  const { isConnected, address, balance, network, connect, disconnect, isConnecting } = useWalletConnection();\r\n  const [copied, setCopied] = useState(false);\r\n  const { toast } = useToast();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleConnect = async () => {\r\n    try {\r\n      await connect();\r\n      toast({\r\n        title: \"Wallet Connected\",\r\n        description: \"Your wallet has been successfully connected.\",\r\n      });\r\n      setIsOpen(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Connection Failed\",\r\n        description: \"Failed to connect wallet. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDisconnect = () => {\r\n    disconnect();\r\n    toast({\r\n      title: \"Wallet Disconnected\",\r\n      description: \"Your wallet has been disconnected.\",\r\n    });\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const copyAddress = () => {\r\n    if (address) {\r\n      navigator.clipboard.writeText(address);\r\n      setCopied(true);\r\n      setTimeout(() => setCopied(false), 2000);\r\n      toast({\r\n        title: \"Address Copied\",\r\n        description: \"Wallet address copied to clipboard.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const truncateAddress = (addr: string) => {\r\n    return `${addr.substring(0, 6)}...${addr.substring(addr.length - 4)}`;\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={setIsOpen}>\r\n      <DialogTrigger asChild>\r\n        <Button\r\n          variant={isConnected ? \"outline\" : \"default\"}\r\n          className={`transition-all duration-300 ${isConnected\r\n            ? 'bg-cropchain-green-light text-cropchain-green hover:bg-cropchain-green-light/80'\r\n            : 'bg-cropchain-green text-white hover:bg-cropchain-green/90'}`}\r\n        >\r\n          <Wallet className=\"mr-2 h-4 w-4\" />\r\n          {isConnected ? truncateAddress(address || '') : 'Connect Wallet'}\r\n        </Button>\r\n      </DialogTrigger>\r\n\r\n      <DialogContent className=\"sm:max-w-[425px] bg-cropchain-light dark:bg-cropchain-dark border border-cropchain-gray/50 rounded-xl shadow-soft\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"text-xl font-medium\">\r\n            {isConnected ? 'Wallet Connected' : 'Connect Your Wallet'}\r\n          </DialogTitle>\r\n        </DialogHeader>\r\n\r\n        <div className=\"py-4\">\r\n          {isConnected ? (\r\n            <div className=\"space-y-4\">\r\n              <div className=\"bg-cropchain-green-light p-4 rounded-lg\">\r\n                <p className=\"text-sm text-cropchain-medium\">Connected to</p>\r\n                <p className=\"font-medium text-cropchain-dark\">{network}</p>\r\n              </div>\r\n\r\n              <div className=\"bg-cropchain-gray/50 p-4 rounded-lg\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <p className=\"text-sm text-cropchain-medium\">Address</p>\r\n                  <Button\r\n                    variant=\"ghost\"\r\n                    size=\"sm\"\r\n                    onClick={copyAddress}\r\n                    className=\"h-8 px-2 text-cropchain-medium hover:text-cropchain-green\"\r\n                  >\r\n                    {copied ? (\r\n                      <CheckCheck className=\"h-4 w-4\" />\r\n                    ) : (\r\n                      <Copy className=\"h-4 w-4\" />\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n                <p className=\"font-medium text-cropchain-dark break-all\">{address}</p>\r\n              </div>\r\n\r\n              <div className=\"bg-cropchain-blue-light p-4 rounded-lg\">\r\n                <p className=\"text-sm text-cropchain-medium\">Balance</p>\r\n                <p className=\"font-medium text-cropchain-dark\">{balance} ETH</p>\r\n              </div>\r\n\r\n              <Button\r\n                variant=\"outline\"\r\n                className=\"w-full mt-2 border-cropchain-gray/50 text-cropchain-medium hover:bg-cropchain-gray/30\"\r\n                onClick={handleDisconnect}\r\n              >\r\n                <LogOut className=\"mr-2 h-4 w-4\" />\r\n                Disconnect Wallet\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"space-y-4\">\r\n              <p className=\"text-cropchain-medium\">\r\n                Connect your wallet to access the yield marketplace and manage your tokens.\r\n              </p>\r\n\r\n              <Button\r\n                className=\"w-full mt-2 bg-cropchain-green text-white hover:bg-cropchain-green/90\"\r\n                onClick={handleConnect}\r\n                disabled={isConnecting}\r\n              >\r\n                {isConnecting ? 'Connecting...' : 'Connect Wallet'}\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default WalletConnect;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1027, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SUBINOY/Desktop/CropChain/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { CheckIcon, ChevronRightIcon, CircleIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction DropdownMenu({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Root>) {\n  return <DropdownMenuPrimitive.Root data-slot=\"dropdown-menu\" {...props} />\n}\n\nfunction DropdownMenuPortal({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Portal>) {\n  return (\n    <DropdownMenuPrimitive.Portal data-slot=\"dropdown-menu-portal\" {...props} />\n  )\n}\n\nfunction DropdownMenuTrigger({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Trigger>) {\n  return (\n    <DropdownMenuPrimitive.Trigger\n      data-slot=\"dropdown-menu-trigger\"\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuContent({\n  className,\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Content>) {\n  return (\n    <DropdownMenuPrimitive.Portal>\n      <DropdownMenuPrimitive.Content\n        data-slot=\"dropdown-menu-content\"\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 max-h-(--radix-dropdown-menu-content-available-height) min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border p-1 shadow-md\",\n          className\n        )}\n        {...props}\n      />\n    </DropdownMenuPrimitive.Portal>\n  )\n}\n\nfunction DropdownMenuGroup({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Group>) {\n  return (\n    <DropdownMenuPrimitive.Group data-slot=\"dropdown-menu-group\" {...props} />\n  )\n}\n\nfunction DropdownMenuItem({\n  className,\n  inset,\n  variant = \"default\",\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Item> & {\n  inset?: boolean\n  variant?: \"default\" | \"destructive\"\n}) {\n  return (\n    <DropdownMenuPrimitive.Item\n      data-slot=\"dropdown-menu-item\"\n      data-inset={inset}\n      data-variant={variant}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/20 data-[variant=destructive]:focus:text-destructive data-[variant=destructive]:*:[svg]:!text-destructive [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuCheckboxItem({\n  className,\n  children,\n  checked,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.CheckboxItem>) {\n  return (\n    <DropdownMenuPrimitive.CheckboxItem\n      data-slot=\"dropdown-menu-checkbox-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      checked={checked}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.CheckboxItem>\n  )\n}\n\nfunction DropdownMenuRadioGroup({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioGroup>) {\n  return (\n    <DropdownMenuPrimitive.RadioGroup\n      data-slot=\"dropdown-menu-radio-group\"\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuRadioItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioItem>) {\n  return (\n    <DropdownMenuPrimitive.RadioItem\n      data-slot=\"dropdown-menu-radio-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <CircleIcon className=\"size-2 fill-current\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.RadioItem>\n  )\n}\n\nfunction DropdownMenuLabel({\n  className,\n  inset,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Label> & {\n  inset?: boolean\n}) {\n  return (\n    <DropdownMenuPrimitive.Label\n      data-slot=\"dropdown-menu-label\"\n      data-inset={inset}\n      className={cn(\n        \"px-2 py-1.5 text-sm font-medium data-[inset]:pl-8\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Separator>) {\n  return (\n    <DropdownMenuPrimitive.Separator\n      data-slot=\"dropdown-menu-separator\"\n      className={cn(\"bg-border -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuShortcut({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) {\n  return (\n    <span\n      data-slot=\"dropdown-menu-shortcut\"\n      className={cn(\n        \"text-muted-foreground ml-auto text-xs tracking-widest\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuSub({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Sub>) {\n  return <DropdownMenuPrimitive.Sub data-slot=\"dropdown-menu-sub\" {...props} />\n}\n\nfunction DropdownMenuSubTrigger({\n  className,\n  inset,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubTrigger> & {\n  inset?: boolean\n}) {\n  return (\n    <DropdownMenuPrimitive.SubTrigger\n      data-slot=\"dropdown-menu-sub-trigger\"\n      data-inset={inset}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-8\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronRightIcon className=\"ml-auto size-4\" />\n    </DropdownMenuPrimitive.SubTrigger>\n  )\n}\n\nfunction DropdownMenuSubContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubContent>) {\n  return (\n    <DropdownMenuPrimitive.SubContent\n      data-slot=\"dropdown-menu-sub-content\"\n      className={cn(\n        \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-hidden rounded-md border p-1 shadow-lg\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  DropdownMenu,\n  DropdownMenuPortal,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1289, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SUBINOY/Desktop/CropChain/src/components/NavBar.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { usePathname } from 'next/navigation';\r\nimport { Button } from '@/components/ui/button';\r\nimport WalletConnect from '@/components/WalletConnect';\r\nimport { useWalletConnection } from '@/utils/web3';\r\nimport { Menu, X, ChevronDown } from 'lucide-react';\r\nimport { cn } from '@/lib/utils';\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger\r\n} from '@/components/ui/dropdown-menu';\r\n\r\nexport function NavBar() {\r\n  const [isScrolled, setIsScrolled] = useState(false);\r\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\r\n  const pathname = usePathname();\r\n  const { isConnected } = useWalletConnection();\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      setIsScrolled(window.scrollY > 10);\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  const isActive = (path: string) => {\r\n    return pathname === path;\r\n  };\r\n\r\n  return (\r\n    <header\r\n      className={cn(\r\n        'fixed top-0 left-0 right-0 z-50 transition-all duration-300 px-6 md:px-10',\r\n        isScrolled\r\n          ? 'py-3 bg-white/80 dark:bg-cropchain-dark/80 backdrop-blur-md shadow-sm'\r\n          : 'py-5 bg-transparent'\r\n      )}\r\n    >\r\n      <div className=\"max-w-7xl mx-auto flex items-center justify-between\">\r\n        <Link\r\n          href=\"/\"\r\n          className=\"text-2xl font-display font-semibold tracking-tight text-cropchain-dark dark:text-white flex items-center\"\r\n        >\r\n          <div className=\"w-10 h-10 mr-2 rounded-lg bg-cropchain-green flex items-center justify-center\">\r\n            <span className=\"text-white font-bold\">C</span>\r\n          </div>\r\n          CropChain\r\n        </Link>\r\n\r\n        {/* Desktop Navigation */}\r\n        <nav className=\"hidden md:flex items-center space-x-1\">\r\n          <Link\r\n            href=\"/\"\r\n            className={cn(\r\n              'px-4 py-2 rounded-md text-sm font-medium transition-colors',\r\n              isActive('/')\r\n                ? 'text-cropchain-green'\r\n                : 'text-cropchain-medium hover:text-cropchain-dark dark:hover:text-white'\r\n            )}\r\n          >\r\n            Home\r\n          </Link>\r\n          <Link\r\n            href=\"/marketplace\"\r\n            className={cn(\r\n              'px-4 py-2 rounded-md text-sm font-medium transition-colors',\r\n              isActive('/marketplace')\r\n                ? 'text-cropchain-green'\r\n                : 'text-cropchain-medium hover:text-cropchain-dark dark:hover:text-white'\r\n            )}\r\n          >\r\n            Marketplace\r\n          </Link>\r\n\r\n          <DropdownMenu>\r\n            <DropdownMenuTrigger asChild>\r\n              <button\r\n                className={cn(\r\n                  'px-4 py-2 rounded-md text-sm font-medium transition-colors flex items-center',\r\n                  (isActive('/farmer-dashboard') || isActive('/investor-dashboard'))\r\n                    ? 'text-cropchain-green'\r\n                    : 'text-cropchain-medium hover:text-cropchain-dark dark:hover:text-white'\r\n                )}\r\n              >\r\n                Dashboard <ChevronDown className=\"ml-1 h-4 w-4\" />\r\n              </button>\r\n            </DropdownMenuTrigger>\r\n            <DropdownMenuContent>\r\n              <DropdownMenuItem asChild>\r\n                <Link\r\n                  href=\"/farmer-dashboard\"\r\n                  className={cn(\r\n                    'w-full px-4 py-2 text-sm',\r\n                    isActive('/farmer-dashboard') && 'font-medium text-cropchain-green'\r\n                  )}\r\n                >\r\n                  Farmer Dashboard\r\n                </Link>\r\n              </DropdownMenuItem>\r\n              <DropdownMenuItem asChild>\r\n                <Link\r\n                  href=\"/investor-dashboard\"\r\n                  className={cn(\r\n                    'w-full px-4 py-2 text-sm',\r\n                    isActive('/investor-dashboard') && 'font-medium text-cropchain-green'\r\n                  )}\r\n                >\r\n                  Investor Dashboard\r\n                </Link>\r\n              </DropdownMenuItem>\r\n            </DropdownMenuContent>\r\n          </DropdownMenu>\r\n        </nav>\r\n\r\n        <div className=\"hidden md:flex items-center space-x-4\">\r\n          <WalletConnect />\r\n\r\n          {isConnected && (\r\n            <Link href=\"/investor-dashboard\">\r\n              <Button variant=\"outline\" className=\"border-cropchain-gray hover:bg-cropchain-gray/30\">\r\n                My Portfolio\r\n              </Button>\r\n            </Link>\r\n          )}\r\n        </div>\r\n\r\n        {/* Mobile Menu Button */}\r\n        <div className=\"flex md:hidden items-center space-x-4\">\r\n          <WalletConnect />\r\n\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\r\n            className=\"p-1\"\r\n          >\r\n            {mobileMenuOpen ? (\r\n              <X className=\"h-6 w-6\" />\r\n            ) : (\r\n              <Menu className=\"h-6 w-6\" />\r\n            )}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Mobile Menu */}\r\n      {mobileMenuOpen && (\r\n        <div className=\"md:hidden absolute top-full left-0 right-0 glass-effect border-t border-cropchain-gray/30 py-4 px-6 flex flex-col space-y-4 animate-slide-up\">\r\n          <Link\r\n            href=\"/\"\r\n            onClick={() => setMobileMenuOpen(false)}\r\n            className={cn(\r\n              'px-4 py-3 rounded-md text-sm font-medium transition-colors',\r\n              isActive('/') ? 'bg-cropchain-green-light text-cropchain-green' : 'hover:bg-cropchain-gray/50'\r\n            )}\r\n          >\r\n            Home\r\n          </Link>\r\n          <Link\r\n            href=\"/marketplace\"\r\n            onClick={() => setMobileMenuOpen(false)}\r\n            className={cn(\r\n              'px-4 py-3 rounded-md text-sm font-medium transition-colors',\r\n              isActive('/marketplace') ? 'bg-cropchain-green-light text-cropchain-green' : 'hover:bg-cropchain-gray/50'\r\n            )}\r\n          >\r\n            Marketplace\r\n          </Link>\r\n          <Link\r\n            href=\"/farmer-dashboard\"\r\n            onClick={() => setMobileMenuOpen(false)}\r\n            className={cn(\r\n              'px-4 py-3 rounded-md text-sm font-medium transition-colors',\r\n              isActive('/farmer-dashboard') ? 'bg-cropchain-green-light text-cropchain-green' : 'hover:bg-cropchain-gray/50'\r\n            )}\r\n          >\r\n            Farmer Dashboard\r\n          </Link>\r\n          <Link\r\n            href=\"/investor-dashboard\"\r\n            onClick={() => setMobileMenuOpen(false)}\r\n            className={cn(\r\n              'px-4 py-3 rounded-md text-sm font-medium transition-colors',\r\n              isActive('/investor-dashboard') ? 'bg-cropchain-green-light text-cropchain-green' : 'hover:bg-cropchain-gray/50'\r\n            )}\r\n          >\r\n            Investor Dashboard\r\n          </Link>\r\n\r\n          {isConnected && (\r\n            <Link\r\n              href=\"/investor-dashboard\"\r\n              onClick={() => setMobileMenuOpen(false)}\r\n              className=\"w-full\"\r\n            >\r\n              <Button variant=\"outline\" className=\"w-full border-cropchain-gray hover:bg-cropchain-gray/30\">\r\n                My Portfolio\r\n              </Button>\r\n            </Link>\r\n          )}\r\n        </div>\r\n      )}\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAVA;;;;;;;;;;;AAiBO,SAAS;IACd,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,oHAAA,CAAA,sBAAmB,AAAD;IAE1C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,eAAe;YACnB,cAAc,OAAO,OAAO,GAAG;QACjC;QAEA,OAAO,gBAAgB,CAAC,UAAU;QAClC,OAAO,IAAM,OAAO,mBAAmB,CAAC,UAAU;IACpD,GAAG,EAAE;IAEL,MAAM,WAAW,CAAC;QAChB,OAAO,aAAa;IACtB;IAEA,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6EACA,aACI,0EACA;;0BAGN,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,4JAAA,CAAA,UAAI;wBACH,MAAK;wBACL,WAAU;;0CAEV,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAK,WAAU;8CAAuB;;;;;;;;;;;4BACnC;;;;;;;kCAKR,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,4JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8DACA,SAAS,OACL,yBACA;0CAEP;;;;;;0CAGD,8OAAC,4JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8DACA,SAAS,kBACL,yBACA;0CAEP;;;;;;0CAID,8OAAC,4IAAA,CAAA,eAAY;;kDACX,8OAAC,4IAAA,CAAA,sBAAmB;wCAAC,OAAO;kDAC1B,cAAA,8OAAC;4CACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,gFACA,AAAC,SAAS,wBAAwB,SAAS,yBACvC,yBACA;;gDAEP;8DACW,8OAAC,oNAAA,CAAA,cAAW;oDAAC,WAAU;;;;;;;;;;;;;;;;;kDAGrC,8OAAC,4IAAA,CAAA,sBAAmB;;0DAClB,8OAAC,4IAAA,CAAA,mBAAgB;gDAAC,OAAO;0DACvB,cAAA,8OAAC,4JAAA,CAAA,UAAI;oDACH,MAAK;oDACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4BACA,SAAS,wBAAwB;8DAEpC;;;;;;;;;;;0DAIH,8OAAC,4IAAA,CAAA,mBAAgB;gDAAC,OAAO;0DACvB,cAAA,8OAAC,4JAAA,CAAA,UAAI;oDACH,MAAK;oDACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4BACA,SAAS,0BAA0B;8DAEtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAQT,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,mIAAA,CAAA,UAAa;;;;;4BAEb,6BACC,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;0CACT,cAAA,8OAAC,kIAAA,CAAA,SAAM;oCAAC,SAAQ;oCAAU,WAAU;8CAAmD;;;;;;;;;;;;;;;;;kCAQ7F,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,mIAAA,CAAA,UAAa;;;;;0CAEd,8OAAC,kIAAA,CAAA,SAAM;gCACL,SAAQ;gCACR,MAAK;gCACL,SAAS,IAAM,kBAAkB,CAAC;gCAClC,WAAU;0CAET,+BACC,8OAAC,4LAAA,CAAA,IAAC;oCAAC,WAAU;;;;;yDAEb,8OAAC,kMAAA,CAAA,OAAI;oCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;YAOvB,gCACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,4JAAA,CAAA,UAAI;wBACH,MAAK;wBACL,SAAS,IAAM,kBAAkB;wBACjC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8DACA,SAAS,OAAO,kDAAkD;kCAErE;;;;;;kCAGD,8OAAC,4JAAA,CAAA,UAAI;wBACH,MAAK;wBACL,SAAS,IAAM,kBAAkB;wBACjC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8DACA,SAAS,kBAAkB,kDAAkD;kCAEhF;;;;;;kCAGD,8OAAC,4JAAA,CAAA,UAAI;wBACH,MAAK;wBACL,SAAS,IAAM,kBAAkB;wBACjC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8DACA,SAAS,uBAAuB,kDAAkD;kCAErF;;;;;;kCAGD,8OAAC,4JAAA,CAAA,UAAI;wBACH,MAAK;wBACL,SAAS,IAAM,kBAAkB;wBACjC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8DACA,SAAS,yBAAyB,kDAAkD;kCAEvF;;;;;;oBAIA,6BACC,8OAAC,4JAAA,CAAA,UAAI;wBACH,MAAK;wBACL,SAAS,IAAM,kBAAkB;wBACjC,WAAU;kCAEV,cAAA,8OAAC,kIAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAU,WAAU;sCAA0D;;;;;;;;;;;;;;;;;;;;;;;AAS5G;uCAEe","debugId":null}},
    {"offset": {"line": 1616, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1634, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SUBINOY/Desktop/CropChain/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1731, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SUBINOY/Desktop/CropChain/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1795, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SUBINOY/Desktop/CropChain/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,8OAAC,oKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE","debugId":null}},
    {"offset": {"line": 1834, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SUBINOY/Desktop/CropChain/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1880, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SUBINOY/Desktop/CropChain/src/app/investor-dashboard/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport NavBar from '@/components/NavBar';\r\nimport TokenCard from '@/components/TokenCard';\r\nimport { useWalletConnection, fetchUserPortfolio, TokenData, fetchMarketTrends } from '@/utils/web3';\r\nimport { useToast } from '@/components/ui/use-toast';\r\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { AlertCircle, Loader2, ArrowRight, BarChart3, ArrowUpRight, TrendingUp, TrendingDown, Clock } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Area, AreaChart, XAxis, YAxis, Tooltip, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';\r\nimport Link from 'next/link';\r\n\r\nconst InvestorDashboard = () => {\r\n    const { isConnected, address } = useWalletConnection();\r\n    const { toast } = useToast();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [portfolio, setPortfolio] = useState<{\r\n        tokens: (TokenData & { amount: number })[];\r\n        totalValue: number;\r\n        projectedReturn: number;\r\n    } | null>(null);\r\n    const [marketTrends, setMarketTrends] = useState<{\r\n        volumeData: { date: string; value: number }[];\r\n        priceData: { date: string; value: number }[];\r\n        popularTokens: string[];\r\n    } | null>(null);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n\r\n        if (isConnected && address) {\r\n            loadInvestorData();\r\n        } else {\r\n            setIsLoading(false);\r\n        }\r\n    }, [isConnected, address]);\r\n\r\n    const loadInvestorData = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            // Load portfolio data\r\n            const portfolioData = await fetchUserPortfolio(address || '');\r\n            setPortfolio(portfolioData);\r\n\r\n            // Load market trends\r\n            const trendsData = await fetchMarketTrends();\r\n            setMarketTrends(trendsData);\r\n        } catch (error) {\r\n            console.error('Error loading investor data:', error);\r\n            toast({\r\n                title: \"Error\",\r\n                description: \"Failed to load your portfolio data. Please try again.\",\r\n                variant: \"destructive\",\r\n            });\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Calculate portfolio allocation for pie chart\r\n    const getPortfolioAllocation = () => {\r\n        if (!portfolio || portfolio.tokens.length === 0) return [];\r\n\r\n        return portfolio.tokens.map(token => ({\r\n            name: token.symbol,\r\n            value: token.amount * token.price\r\n        }));\r\n    };\r\n\r\n    // Colors for pie chart\r\n    const COLORS = ['#3CAB5A', '#34ADDD', '#F5A623', '#9B51E0', '#FF6B6B'];\r\n\r\n    if (!isConnected && !isLoading) {\r\n        return (\r\n            <div className=\"min-h-screen flex flex-col\">\r\n                <NavBar />\r\n\r\n                <div className=\"flex-grow flex items-center justify-center pt-16\">\r\n                    <div className=\"max-w-md mx-auto p-6 text-center\">\r\n                        <div className=\"mb-6 w-16 h-16 rounded-full bg-cropchain-gray/50 flex items-center justify-center mx-auto\">\r\n                            <AlertCircle className=\"h-8 w-8 text-cropchain-medium\" />\r\n                        </div>\r\n                        <h1 className=\"text-2xl font-semibold mb-4\">Wallet Not Connected</h1>\r\n                        <p className=\"text-cropchain-medium mb-6\">\r\n                            You need to connect your wallet to access the Investor Dashboard.\r\n                        </p>\r\n                        <Button className=\"bg-cropchain-green text-white hover:bg-cropchain-green/90\">\r\n                            Connect Wallet\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen flex flex-col\">\r\n            <NavBar />\r\n\r\n            <main className=\"flex-grow pt-24 pb-16\">\r\n                <div className=\"max-w-7xl mx-auto px-6 md:px-10\">\r\n                    {isLoading ? (\r\n                        <div className=\"flex justify-center items-center py-20\">\r\n                            <Loader2 className=\"h-8 w-8 animate-spin text-cropchain-green\" />\r\n                            <span className=\"ml-2 text-cropchain-medium\">Loading portfolio...</span>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"mb-8\">\r\n                                <h1 className=\"text-3xl md:text-4xl font-display font-semibold text-cropchain-dark dark:text-white mb-2\">\r\n                                    Investor Dashboard\r\n                                </h1>\r\n                                <p className=\"text-lg text-cropchain-medium max-w-2xl\">\r\n                                    Track your agricultural investments and monitor market trends.\r\n                                </p>\r\n                            </div>\r\n\r\n                            {/* Dashboard Summary Cards */}\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n                                <Card className=\"border-cropchain-gray/20 bg-white dark:bg-cropchain-dark\">\r\n                                    <CardHeader className=\"pb-2\">\r\n                                        <CardTitle className=\"text-lg\">Portfolio Value</CardTitle>\r\n                                        <CardDescription>Current holdings</CardDescription>\r\n                                    </CardHeader>\r\n                                    <CardContent>\r\n                                        <div className=\"flex items-end justify-between\">\r\n                                            <div className=\"text-3xl font-semibold\">\r\n                                                ${portfolio?.totalValue.toFixed(2) || '0.00'}\r\n                                            </div>\r\n                                            {portfolio && portfolio.totalValue > 0 && (\r\n                                                <div className=\"text-sm text-green-600 flex items-center\">\r\n                                                    <ArrowUpRight className=\"h-4 w-4 mr-1\" />\r\n                                                    +5.2% this week\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n\r\n                                <Card className=\"border-cropchain-gray/20 bg-white dark:bg-cropchain-dark\">\r\n                                    <CardHeader className=\"pb-2\">\r\n                                        <CardTitle className=\"text-lg\">Projected Return</CardTitle>\r\n                                        <CardDescription>At harvest time</CardDescription>\r\n                                    </CardHeader>\r\n                                    <CardContent>\r\n                                        <div className=\"flex items-end justify-between\">\r\n                                            <div className=\"text-3xl font-semibold text-cropchain-green\">\r\n                                                ${portfolio?.projectedReturn.toFixed(2) || '0.00'}\r\n                                            </div>\r\n                                            {portfolio && portfolio.projectedReturn > 0 && (\r\n                                                <div className=\"text-sm text-cropchain-medium\">\r\n                                                    Est. {portfolio && ((portfolio.projectedReturn / portfolio.totalValue - 1) * 100).toFixed(1)}% ROI\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n\r\n                                <Card className=\"border-cropchain-gray/20 bg-white dark:bg-cropchain-dark\">\r\n                                    <CardHeader className=\"pb-2\">\r\n                                        <CardTitle className=\"text-lg\">Token Types</CardTitle>\r\n                                        <CardDescription>Unique holdings</CardDescription>\r\n                                    </CardHeader>\r\n                                    <CardContent>\r\n                                        <div className=\"flex items-end justify-between\">\r\n                                            <div className=\"text-3xl font-semibold\">\r\n                                                {portfolio?.tokens.length || 0}\r\n                                            </div>\r\n                                            {portfolio && portfolio.tokens.length > 0 && (\r\n                                                <div className=\"text-sm text-cropchain-medium flex flex-wrap\">\r\n                                                    {portfolio.tokens.slice(0, 3).map((token, i) => (\r\n                                                        <Badge key={i} variant=\"outline\" className=\"mr-1 mb-1 border-cropchain-green/20 bg-cropchain-green/10\">\r\n                                                            {token.symbol}\r\n                                                        </Badge>\r\n                                                    ))}\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n\r\n                                <Card className=\"border-cropchain-gray/20 bg-white dark:bg-cropchain-dark\">\r\n                                    <CardHeader className=\"pb-2\">\r\n                                        <CardTitle className=\"text-lg\">Nearest Harvest</CardTitle>\r\n                                        <CardDescription>Next payout</CardDescription>\r\n                                    </CardHeader>\r\n                                    <CardContent>\r\n                                        <div className=\"flex items-end justify-between\">\r\n                                            <div className=\"text-3xl font-semibold\">\r\n                                                {portfolio && portfolio.tokens.length > 0 ? (\r\n                                                    new Date(\r\n                                                        Math.min(\r\n                                                            ...portfolio.tokens.map(token => new Date(token.harvestDate).getTime())\r\n                                                        )\r\n                                                    ).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })\r\n                                                ) : (\r\n                                                    \"N/A\"\r\n                                                )}\r\n                                            </div>\r\n                                            <div className=\"text-sm text-cropchain-medium\">\r\n                                                {portfolio && portfolio.tokens.length > 0 ? (\r\n                                                    Math.ceil((Math.min(\r\n                                                        ...portfolio.tokens.map(token => new Date(token.harvestDate).getTime())\r\n                                                    ) - new Date().getTime()) / (1000 * 60 * 60 * 24))\r\n                                                ) : (\r\n                                                    \"0\"\r\n                                                )} days left\r\n                                            </div>\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </div>\r\n\r\n                            {/* Main Dashboard Content */}\r\n                            <Tabs defaultValue=\"portfolio\" className=\"w-full\">\r\n                                <TabsList className=\"mb-6\">\r\n                                    <TabsTrigger value=\"portfolio\">My Portfolio</TabsTrigger>\r\n                                    <TabsTrigger value=\"performance\">Performance</TabsTrigger>\r\n                                    <TabsTrigger value=\"market\">Market Trends</TabsTrigger>\r\n                                </TabsList>\r\n\r\n                                <TabsContent value=\"portfolio\">\r\n                                    {portfolio && portfolio.tokens.length > 0 ? (\r\n                                        <div className=\"space-y-8\">\r\n                                            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n                                                <div className=\"lg:col-span-2\">\r\n                                                    <Card className=\"border-cropchain-gray/20 bg-white dark:bg-cropchain-dark h-full\">\r\n                                                        <CardHeader>\r\n                                                            <CardTitle>Token Holdings</CardTitle>\r\n                                                            <CardDescription>Your agricultural token investments</CardDescription>\r\n                                                        </CardHeader>\r\n                                                        <CardContent className=\"space-y-6\">\r\n                                                            {portfolio.tokens.map((token, index) => (\r\n                                                                <div key={token.id} className={`flex items-center p-3 rounded-lg ${index % 2 === 0 ? 'bg-cropchain-green-light dark:bg-cropchain-green/10' : 'bg-cropchain-blue-light dark:bg-cropchain-blue/10'\r\n                                                                    }`}>\r\n                                                                    <div className={`h-10 w-10 rounded-full flex items-center justify-center mr-4 ${index % 2 === 0 ? 'bg-cropchain-green/20' : 'bg-cropchain-blue/20'\r\n                                                                        }`}>\r\n                                                                        <span className={`font-semibold ${index % 2 === 0 ? 'text-cropchain-green' : 'text-cropchain-blue'\r\n                                                                            }`}>\r\n                                                                            {token.symbol.substring(0, 1)}\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                    <div className=\"flex-grow\">\r\n                                                                        <div className=\"flex justify-between\">\r\n                                                                            <h4 className=\"font-medium\">{token.name}</h4>\r\n                                                                            <span className=\"font-semibold\">${(token.amount * token.price).toFixed(2)}</span>\r\n                                                                        </div>\r\n                                                                        <div className=\"flex justify-between mt-1\">\r\n                                                                            <div className=\"text-sm flex items-center\">\r\n                                                                                <Badge variant=\"outline\" className=\"mr-2 border-none bg-white/50 dark:bg-black/20\">\r\n                                                                                    {token.symbol}\r\n                                                                                </Badge>\r\n                                                                                <span className=\"text-cropchain-medium\">{token.amount} tokens</span>\r\n                                                                            </div>\r\n                                                                            <span className=\"text-sm text-cropchain-medium\">\r\n                                                                                ${token.price.toFixed(3)} per token\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            ))}\r\n                                                        </CardContent>\r\n                                                        <CardFooter className=\"border-t border-cropchain-gray/20 pt-4\">\r\n                                                            <Link href=\"/marketplace\" className=\"w-full\">\r\n                                                                <Button variant=\"outline\" className=\"w-full border-cropchain-gray/40\">\r\n                                                                    Explore More Tokens\r\n                                                                    <ArrowRight className=\"ml-2 h-4 w-4\" />\r\n                                                                </Button>\r\n                                                            </Link>\r\n                                                        </CardFooter>\r\n                                                    </Card>\r\n                                                </div>\r\n\r\n                                                <div>\r\n                                                    <Card className=\"border-cropchain-gray/20 bg-white dark:bg-cropchain-dark h-full\">\r\n                                                        <CardHeader>\r\n                                                            <CardTitle>Portfolio Allocation</CardTitle>\r\n                                                            <CardDescription>Distribution by token value</CardDescription>\r\n                                                        </CardHeader>\r\n                                                        <CardContent className=\"flex flex-col items-center\">\r\n                                                            <div className=\"w-full h-64\">\r\n                                                                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                                                                    <PieChart>\r\n                                                                        <Pie\r\n                                                                            data={getPortfolioAllocation()}\r\n                                                                            cx=\"50%\"\r\n                                                                            cy=\"50%\"\r\n                                                                            innerRadius={60}\r\n                                                                            outerRadius={80}\r\n                                                                            paddingAngle={5}\r\n                                                                            dataKey=\"value\"\r\n                                                                            label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\r\n                                                                        >\r\n                                                                            {getPortfolioAllocation().map((entry, index) => (\r\n                                                                                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                                                            ))}\r\n                                                                        </Pie>\r\n                                                                        <Tooltip\r\n                                                                            formatter={(value: number) => [`$${value.toFixed(2)}`, 'Value']}\r\n                                                                        />\r\n                                                                    </PieChart>\r\n                                                                </ResponsiveContainer>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"w-full mt-6 space-y-3\">\r\n                                                                {portfolio.tokens.map((token, index) => (\r\n                                                                    <div key={token.id} className=\"flex items-center text-sm\">\r\n                                                                        <div\r\n                                                                            className=\"w-3 h-3 mr-2 rounded-full\"\r\n                                                                            style={{ backgroundColor: COLORS[index % COLORS.length] }}\r\n                                                                        />\r\n                                                                        <span className=\"flex-grow\">{token.symbol}</span>\r\n                                                                        <span className=\"font-medium\">\r\n                                                                            ${(token.amount * token.price).toFixed(2)}\r\n                                                                        </span>\r\n                                                                        <span className=\"ml-2 text-cropchain-medium\">\r\n                                                                            ({((token.amount * token.price / portfolio.totalValue) * 100).toFixed(1)}%)\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        </CardContent>\r\n                                                    </Card>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <Card className=\"border-cropchain-gray/20 bg-white dark:bg-cropchain-dark\">\r\n                                                <CardHeader>\r\n                                                    <CardTitle>Harvest Schedule</CardTitle>\r\n                                                    <CardDescription>Upcoming token harvests and expected returns</CardDescription>\r\n                                                </CardHeader>\r\n                                                <CardContent>\r\n                                                    <div className=\"space-y-6\">\r\n                                                        {portfolio.tokens\r\n                                                            .sort((a, b) => new Date(a.harvestDate).getTime() - new Date(b.harvestDate).getTime())\r\n                                                            .map((token, index) => {\r\n                                                                const harvestDate = new Date(token.harvestDate);\r\n                                                                const daysRemaining = Math.ceil((harvestDate.getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\r\n                                                                const progressPercent = Math.max(0, Math.min(100, 100 - (daysRemaining / 180) * 100));\r\n\r\n                                                                return (\r\n                                                                    <div key={token.id} className=\"space-y-2\">\r\n                                                                        <div className=\"flex justify-between items-center\">\r\n                                                                            <div>\r\n                                                                                <h4 className=\"font-medium flex items-center\">\r\n                                                                                    {token.symbol}\r\n                                                                                    <Badge\r\n                                                                                        className=\"ml-2 bg-cropchain-green-light text-cropchain-green dark:bg-cropchain-green/20\"\r\n                                                                                    >\r\n                                                                                        {token.cropType}\r\n                                                                                    </Badge>\r\n                                                                                </h4>\r\n                                                                                <p className=\"text-sm text-cropchain-medium mt-1\">\r\n                                                                                    Harvest Date: {harvestDate.toLocaleDateString()}\r\n                                                                                </p>\r\n                                                                            </div>\r\n                                                                            <div className=\"text-right\">\r\n                                                                                <p className=\"font-medium\">${(token.amount * token.price * (1 + token.projectedYield / 1000)).toFixed(2)}</p>\r\n                                                                                <p className=\"text-sm text-cropchain-medium\">\r\n                                                                                    Projected Return\r\n                                                                                </p>\r\n                                                                            </div>\r\n                                                                        </div>\r\n\r\n                                                                        <div className=\"space-y-1\">\r\n                                                                            <Progress value={progressPercent} className=\"h-2\" />\r\n                                                                            <div className=\"flex justify-between text-xs text-cropchain-medium\">\r\n                                                                                <span>Growing Period</span>\r\n                                                                                <span>{daysRemaining > 0 ? `${daysRemaining} days remaining` : 'Ready for harvest'}</span>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                );\r\n                                                            })}\r\n                                                    </div>\r\n                                                </CardContent>\r\n                                            </Card>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div className=\"text-center py-20 bg-cropchain-gray/30 rounded-xl\">\r\n                                            <BarChart3 className=\"h-12 w-12 mx-auto text-cropchain-medium mb-4\" />\r\n                                            <h3 className=\"text-xl font-medium mb-2\">No Tokens Yet</h3>\r\n                                            <p className=\"text-cropchain-medium max-w-md mx-auto mb-6\">\r\n                                                You haven't purchased any agricultural tokens yet. Visit the marketplace to start investing in tokenized crop yields.\r\n                                            </p>\r\n                                            <Link href=\"/marketplace\">\r\n                                                <Button\r\n                                                    className=\"bg-cropchain-green hover:bg-cropchain-green/90 text-white\"\r\n                                                >\r\n                                                    Explore Marketplace\r\n                                                    <ArrowRight className=\"ml-2 h-4 w-4\" />\r\n                                                </Button>\r\n                                            </Link>\r\n                                        </div>\r\n                                    )}\r\n                                </TabsContent>\r\n\r\n                                <TabsContent value=\"performance\">\r\n                                    <div className=\"space-y-6\">\r\n                                        <Card className=\"border-cropchain-gray/20 bg-white dark:bg-cropchain-dark\">\r\n                                            <CardHeader>\r\n                                                <CardTitle>Portfolio Performance</CardTitle>\r\n                                                <CardDescription>Value over time and projected returns</CardDescription>\r\n                                            </CardHeader>\r\n                                            <CardContent className=\"h-80\">\r\n                                                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                                                    <AreaChart\r\n                                                        data={[\r\n                                                            { date: '2024-01', actual: 0, projected: 0 },\r\n                                                            { date: '2024-02', actual: 2600, projected: 2600 },\r\n                                                            { date: '2024-03', actual: 4200, projected: 4200 },\r\n                                                            { date: '2024-04', actual: 6800, projected: 6800 },\r\n                                                            { date: '2024-05', actual: 8400, projected: 8400 },\r\n                                                            { date: '2024-06', actual: 10200, projected: 10200 },\r\n                                                            { date: '2024-07', actual: 0, projected: 12800 },\r\n                                                            { date: '2024-08', actual: 0, projected: 14000 },\r\n                                                            { date: '2024-09', actual: 0, projected: 15400 },\r\n                                                            { date: '2024-10', actual: 0, projected: 16800 },\r\n                                                            { date: '2024-11', actual: 0, projected: 17200 },\r\n                                                            { date: '2024-12', actual: 0, projected: 18600 },\r\n                                                        ]}\r\n                                                        margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n                                                    >\r\n                                                        <defs>\r\n                                                            <linearGradient id=\"colorActual\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                                                <stop offset=\"5%\" stopColor=\"#3CAB5A\" stopOpacity={0.8} />\r\n                                                                <stop offset=\"95%\" stopColor=\"#3CAB5A\" stopOpacity={0} />\r\n                                                            </linearGradient>\r\n                                                            <linearGradient id=\"colorProjected\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                                                <stop offset=\"5%\" stopColor=\"#34ADDD\" stopOpacity={0.8} />\r\n                                                                <stop offset=\"95%\" stopColor=\"#34ADDD\" stopOpacity={0} />\r\n                                                            </linearGradient>\r\n                                                        </defs>\r\n                                                        <XAxis\r\n                                                            dataKey=\"date\"\r\n                                                            tickFormatter={(tick) => {\r\n                                                                const date = new Date(tick);\r\n                                                                return date.toLocaleDateString('en-US', { month: 'short' });\r\n                                                            }}\r\n                                                        />\r\n                                                        <YAxis\r\n                                                            tickFormatter={(tick) => `$${tick}`}\r\n                                                        />\r\n                                                        <Tooltip\r\n                                                            formatter={(value: number) => [`$${value.toFixed(2)}`, '']}\r\n                                                            labelFormatter={(label) => {\r\n                                                                const date = new Date(label);\r\n                                                                return date.toLocaleDateString('en-US', { month: 'long', year: 'numeric' });\r\n                                                            }}\r\n                                                        />\r\n                                                        <Area\r\n                                                            type=\"monotone\"\r\n                                                            dataKey=\"actual\"\r\n                                                            stroke=\"#3CAB5A\"\r\n                                                            fillOpacity={1}\r\n                                                            fill=\"url(#colorActual)\"\r\n                                                            name=\"Actual Value\"\r\n                                                        />\r\n                                                        <Area\r\n                                                            type=\"monotone\"\r\n                                                            dataKey=\"projected\"\r\n                                                            stroke=\"#34ADDD\"\r\n                                                            fillOpacity={1}\r\n                                                            fill=\"url(#colorProjected)\"\r\n                                                            strokeDasharray=\"5 5\"\r\n                                                            name=\"Projected Value\"\r\n                                                        />\r\n                                                    </AreaChart>\r\n                                                </ResponsiveContainer>\r\n                                            </CardContent>\r\n                                            <CardFooter className=\"border-t border-cropchain-gray/20 pt-4\">\r\n                                                <div className=\"w-full flex flex-col sm:flex-row items-center justify-between\">\r\n                                                    <div className=\"flex items-center space-x-4 mb-4 sm:mb-0\">\r\n                                                        <div className=\"flex items-center\">\r\n                                                            <div className=\"w-3 h-3 rounded-full bg-cropchain-green mr-2\"></div>\r\n                                                            <span className=\"text-sm\">Actual Value</span>\r\n                                                        </div>\r\n                                                        <div className=\"flex items-center\">\r\n                                                            <div className=\"w-3 h-3 rounded-full bg-cropchain-blue mr-2\"></div>\r\n                                                            <span className=\"text-sm\">Projected Return</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"text-sm text-cropchain-medium\">\r\n                                                        Projected annual return:\r\n                                                        <span className=\"font-medium text-cropchain-green ml-1\">\r\n                                                            {portfolio && portfolio.totalValue > 0\r\n                                                                ? ((portfolio.projectedReturn / portfolio.totalValue - 1) * 100).toFixed(1)\r\n                                                                : '0.0'}%\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </CardFooter>\r\n                                        </Card>\r\n\r\n                                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                                            <Card className=\"border-cropchain-gray/20 bg-white dark:bg-cropchain-dark\">\r\n                                                <CardHeader>\r\n                                                    <CardTitle>Token Performance</CardTitle>\r\n                                                    <CardDescription>Individual token returns</CardDescription>\r\n                                                </CardHeader>\r\n                                                <CardContent>\r\n                                                    <div className=\"space-y-4\">\r\n                                                        {portfolio && portfolio.tokens.length > 0 ? (\r\n                                                            portfolio.tokens.map((token) => {\r\n                                                                const returnPercent = (token.projectedYield / 1000) * 100;\r\n                                                                const isPositive = returnPercent > 0;\r\n\r\n                                                                return (\r\n                                                                    <div key={token.id} className=\"flex items-center p-3 rounded-lg bg-cropchain-gray/20\">\r\n                                                                        <div className=\"flex-grow\">\r\n                                                                            <h4 className=\"font-medium\">{token.symbol}</h4>\r\n                                                                            <p className=\"text-sm text-cropchain-medium\">{token.cropType}</p>\r\n                                                                        </div>\r\n                                                                        <div className=\"text-right\">\r\n                                                                            <div className={`flex items-center ${isPositive ? 'text-green-600' : 'text-red-500'}`}>\r\n                                                                                {isPositive ? (\r\n                                                                                    <TrendingUp className=\"h-4 w-4 mr-1\" />\r\n                                                                                ) : (\r\n                                                                                    <TrendingDown className=\"h-4 w-4 mr-1\" />\r\n                                                                                )}\r\n                                                                                <span className=\"font-medium\">{returnPercent.toFixed(1)}%</span>\r\n                                                                            </div>\r\n                                                                            <p className=\"text-xs text-cropchain-medium\">Expected Return</p>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                );\r\n                                                            })\r\n                                                        ) : (\r\n                                                            <div className=\"text-center py-8 text-cropchain-medium\">\r\n                                                                No tokens in your portfolio.\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </CardContent>\r\n                                            </Card>\r\n\r\n                                            <Card className=\"border-cropchain-gray/20 bg-white dark:bg-cropchain-dark\">\r\n                                                <CardHeader>\r\n                                                    <CardTitle>Risk Assessment</CardTitle>\r\n                                                    <CardDescription>Portfolio risk distribution</CardDescription>\r\n                                                </CardHeader>\r\n                                                <CardContent>\r\n                                                    {portfolio && portfolio.tokens.length > 0 ? (\r\n                                                        <div className=\"space-y-6\">\r\n                                                            <div className=\"grid grid-cols-3 gap-4\">\r\n                                                                {['Low', 'Medium', 'High'].map((risk) => {\r\n                                                                    const tokensByRisk = portfolio.tokens.filter(t => t.riskLevel === risk);\r\n                                                                    const valueByRisk = tokensByRisk.reduce((sum, token) =>\r\n                                                                        sum + token.amount * token.price,\r\n                                                                        0);\r\n                                                                    const percentByRisk = portfolio.totalValue > 0\r\n                                                                        ? (valueByRisk / portfolio.totalValue) * 100\r\n                                                                        : 0;\r\n\r\n                                                                    return (\r\n                                                                        <div\r\n                                                                            key={risk}\r\n                                                                            className={`p-3 rounded-lg ${risk === 'Low'\r\n                                                                                ? 'bg-green-100 dark:bg-green-900/30'\r\n                                                                                : risk === 'Medium'\r\n                                                                                    ? 'bg-yellow-100 dark:bg-yellow-900/30'\r\n                                                                                    : 'bg-red-100 dark:bg-red-900/30'\r\n                                                                                }`}\r\n                                                                        >\r\n                                                                            <p className={`text-sm font-medium ${risk === 'Low'\r\n                                                                                ? 'text-green-800 dark:text-green-400'\r\n                                                                                : risk === 'Medium'\r\n                                                                                    ? 'text-yellow-800 dark:text-yellow-400'\r\n                                                                                    : 'text-red-800 dark:text-red-400'\r\n                                                                                }`}>\r\n                                                                                {risk} Risk\r\n                                                                            </p>\r\n                                                                            <p className=\"text-lg font-semibold mt-1\">{percentByRisk.toFixed(1)}%</p>\r\n                                                                            <p className=\"text-xs text-cropchain-medium mt-1\">\r\n                                                                                {tokensByRisk.length} tokens\r\n                                                                            </p>\r\n                                                                        </div>\r\n                                                                    );\r\n                                                                })}\r\n                                                            </div>\r\n\r\n                                                            <div>\r\n                                                                <h4 className=\"text-sm font-medium mb-2\">Risk Breakdown by Crop Type</h4>\r\n                                                                <div className=\"space-y-3\">\r\n                                                                    {/* Group tokens by crop type */}\r\n                                                                    {Array.from(new Set(portfolio.tokens.map(t => t.cropType))).map(cropType => {\r\n                                                                        const cropTokens = portfolio.tokens.filter(t => t.cropType === cropType);\r\n                                                                        const cropValue = cropTokens.reduce((sum, token) => sum + token.amount * token.price, 0);\r\n                                                                        const cropPercent = portfolio.totalValue > 0\r\n                                                                            ? (cropValue / portfolio.totalValue) * 100\r\n                                                                            : 0;\r\n\r\n                                                                        // Count tokens by risk level within this crop type\r\n                                                                        const lowRisk = cropTokens.filter(t => t.riskLevel === 'Low').length;\r\n                                                                        const mediumRisk = cropTokens.filter(t => t.riskLevel === 'Medium').length;\r\n                                                                        const highRisk = cropTokens.filter(t => t.riskLevel === 'High').length;\r\n\r\n                                                                        return (\r\n                                                                            <div key={cropType} className=\"space-y-1\">\r\n                                                                                <div className=\"flex justify-between items-center\">\r\n                                                                                    <span className=\"text-sm font-medium\">{cropType}</span>\r\n                                                                                    <span className=\"text-sm\">{cropPercent.toFixed(1)}%</span>\r\n                                                                                </div>\r\n                                                                                <div className=\"w-full h-2 rounded-full bg-cropchain-gray/30 overflow-hidden flex\">\r\n                                                                                    {lowRisk > 0 && (\r\n                                                                                        <div\r\n                                                                                            className=\"h-full bg-green-500\"\r\n                                                                                            style={{\r\n                                                                                                width: `${(lowRisk / cropTokens.length) * 100}%`\r\n                                                                                            }}\r\n                                                                                        />\r\n                                                                                    )}\r\n                                                                                    {mediumRisk > 0 && (\r\n                                                                                        <div\r\n                                                                                            className=\"h-full bg-yellow-500\"\r\n                                                                                            style={{\r\n                                                                                                width: `${(mediumRisk / cropTokens.length) * 100}%`\r\n                                                                                            }}\r\n                                                                                        />\r\n                                                                                    )}\r\n                                                                                    {highRisk > 0 && (\r\n                                                                                        <div\r\n                                                                                            className=\"h-full bg-red-500\"\r\n                                                                                            style={{\r\n                                                                                                width: `${(highRisk / cropTokens.length) * 100}%`\r\n                                                                                            }}\r\n                                                                                        />\r\n                                                                                    )}\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        );\r\n                                                                    })}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    ) : (\r\n                                                        <div className=\"text-center py-8 text-cropchain-medium\">\r\n                                                            No tokens in your portfolio to assess risk.\r\n                                                        </div>\r\n                                                    )}\r\n                                                </CardContent>\r\n                                            </Card>\r\n                                        </div>\r\n                                    </div>\r\n                                </TabsContent>\r\n\r\n                                <TabsContent value=\"market\">\r\n                                    <div className=\"space-y-6\">\r\n                                        <Card className=\"border-cropchain-gray/20 bg-white dark:bg-cropchain-dark\">\r\n                                            <CardHeader>\r\n                                                <CardTitle>Market Trends</CardTitle>\r\n                                                <CardDescription>Trading volume and token price trends</CardDescription>\r\n                                            </CardHeader>\r\n                                            <CardContent className=\"h-80\">\r\n                                                {marketTrends ? (\r\n                                                    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                                                        <AreaChart\r\n                                                            data={marketTrends.volumeData}\r\n                                                            margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n                                                        >\r\n                                                            <defs>\r\n                                                                <linearGradient id=\"colorVolume\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                                                    <stop offset=\"5%\" stopColor=\"#3CAB5A\" stopOpacity={0.8} />\r\n                                                                    <stop offset=\"95%\" stopColor=\"#3CAB5A\" stopOpacity={0} />\r\n                                                                </linearGradient>\r\n                                                            </defs>\r\n                                                            <XAxis\r\n                                                                dataKey=\"date\"\r\n                                                                tickFormatter={(tick) => {\r\n                                                                    const date = new Date(tick);\r\n                                                                    return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n                                                                }}\r\n                                                            />\r\n                                                            <YAxis\r\n                                                                tickFormatter={(tick) => `$${(tick / 1000).toFixed(0)}k`}\r\n                                                            />\r\n                                                            <Tooltip\r\n                                                                formatter={(value: number) => [`$${value.toFixed(2)}`, 'Volume']}\r\n                                                                labelFormatter={(label) => {\r\n                                                                    const date = new Date(label);\r\n                                                                    return date.toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' });\r\n                                                                }}\r\n                                                            />\r\n                                                            <Area\r\n                                                                type=\"monotone\"\r\n                                                                dataKey=\"value\"\r\n                                                                stroke=\"#3CAB5A\"\r\n                                                                fillOpacity={1}\r\n                                                                fill=\"url(#colorVolume)\"\r\n                                                                name=\"Trading Volume\"\r\n                                                            />\r\n                                                        </AreaChart>\r\n                                                    </ResponsiveContainer>\r\n                                                ) : (\r\n                                                    <div className=\"flex items-center justify-center h-full\">\r\n                                                        <Loader2 className=\"h-8 w-8 animate-spin text-cropchain-medium\" />\r\n                                                    </div>\r\n                                                )}\r\n                                            </CardContent>\r\n                                            <CardFooter className=\"border-t border-cropchain-gray/20 pt-4\">\r\n                                                <div className=\"w-full grid grid-cols-3 gap-4\">\r\n                                                    <div className=\"text-center\">\r\n                                                        <p className=\"text-sm text-cropchain-medium\">30-Day Volume</p>\r\n                                                        <p className=\"font-semibold\">$348,952</p>\r\n                                                    </div>\r\n                                                    <div className=\"text-center\">\r\n                                                        <p className=\"text-sm text-cropchain-medium\">Average Price</p>\r\n                                                        <p className=\"font-semibold\">$0.024</p>\r\n                                                    </div>\r\n                                                    <div className=\"text-center\">\r\n                                                        <p className=\"text-sm text-cropchain-medium\">Price Trend</p>\r\n                                                        <p className=\"font-semibold text-green-600 flex items-center justify-center\">\r\n                                                            <TrendingUp className=\"h-4 w-4 mr-1\" />\r\n                                                            +8.3%\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </CardFooter>\r\n                                        </Card>\r\n\r\n                                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                                            <Card className=\"border-cropchain-gray/20 bg-white dark:bg-cropchain-dark\">\r\n                                                <CardHeader>\r\n                                                    <CardTitle>Popular Tokens</CardTitle>\r\n                                                    <CardDescription>Most traded in the last 30 days</CardDescription>\r\n                                                </CardHeader>\r\n                                                <CardContent>\r\n                                                    <div className=\"space-y-4\">\r\n                                                        {marketTrends ? (\r\n                                                            marketTrends.popularTokens.map((symbol, index) => (\r\n                                                                <div key={symbol} className=\"flex items-center p-3 rounded-lg bg-cropchain-gray/20\">\r\n                                                                    <div className=\"flex-shrink-0 mr-4 text-lg font-semibold text-cropchain-medium\">\r\n                                                                        #{index + 1}\r\n                                                                    </div>\r\n                                                                    <div className=\"flex-grow\">\r\n                                                                        <h4 className=\"font-medium\">{symbol}</h4>\r\n                                                                        <p className=\"text-sm text-cropchain-medium\">\r\n                                                                            {\r\n                                                                                symbol === 'CORN24' ? 'Corn' :\r\n                                                                                    symbol === 'WHEAT24' ? 'Wheat' : 'Soybean'\r\n                                                                            }\r\n                                                                        </p>\r\n                                                                    </div>\r\n                                                                    <div className=\"text-right\">\r\n                                                                        <p className=\"font-medium\">\r\n                                                                            ${(0.02 + 0.005 * Math.random()).toFixed(3)}\r\n                                                                        </p>\r\n                                                                        <div className={`text-xs flex items-center justify-end ${index % 3 === 0 ? 'text-green-600' :\r\n                                                                            index % 3 === 1 ? 'text-red-500' : 'text-green-600'\r\n                                                                            }`}>\r\n                                                                            {index % 3 === 0 ? (\r\n                                                                                <>\r\n                                                                                    <TrendingUp className=\"h-3 w-3 mr-1\" />\r\n                                                                                    +{(Math.random() * 10).toFixed(1)}%\r\n                                                                                </>\r\n                                                                            ) : index % 3 === 1 ? (\r\n                                                                                <>\r\n                                                                                    <TrendingDown className=\"h-3 w-3 mr-1\" />\r\n                                                                                    -{(Math.random() * 5).toFixed(1)}%\r\n                                                                                </>\r\n                                                                            ) : (\r\n                                                                                <>\r\n                                                                                    <TrendingUp className=\"h-3 w-3 mr-1\" />\r\n                                                                                    +{(Math.random() * 8).toFixed(1)}%\r\n                                                                                </>\r\n                                                                            )}\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : (\r\n                                                            <div className=\"flex justify-center items-center py-8\">\r\n                                                                <Loader2 className=\"h-6 w-6 animate-spin text-cropchain-medium\" />\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </CardContent>\r\n                                                <CardFooter className=\"border-t border-cropchain-gray/20 pt-4\">\r\n                                                    <Link href=\"/marketplace\" className=\"w-full\">\r\n                                                        <Button variant=\"outline\" className=\"w-full border-cropchain-gray/40\">\r\n                                                            View All Tokens\r\n                                                        </Button>\r\n                                                    </Link>\r\n                                                </CardFooter>\r\n                                            </Card>\r\n\r\n                                            <Card className=\"border-cropchain-gray/20 bg-white dark:bg-cropchain-dark\">\r\n                                                <CardHeader>\r\n                                                    <CardTitle>Upcoming Harvests</CardTitle>\r\n                                                    <CardDescription>Market-wide harvest schedule</CardDescription>\r\n                                                </CardHeader>\r\n                                                <CardContent>\r\n                                                    <div className=\"space-y-4\">\r\n                                                        {[\r\n                                                            { crop: 'Wheat', region: 'Kansas, USA', date: '2024-07-20', tokens: ['WHEAT24', 'KSWHT24'] },\r\n                                                            { crop: 'Corn', region: 'Iowa, USA', date: '2024-09-15', tokens: ['CORN24', 'IOWC24'] },\r\n                                                            { crop: 'Soybean', region: 'Illinois, USA', date: '2024-10-05', tokens: ['SOY24', 'ILSOY24'] },\r\n                                                            { crop: 'Rice', region: 'California, USA', date: '2024-08-30', tokens: ['RICE24', 'CARIC24'] },\r\n                                                        ].map((harvest, index) => (\r\n                                                            <div key={index} className=\"flex items-start p-3 rounded-lg bg-cropchain-gray/20\">\r\n                                                                <div className=\"flex-shrink-0 mr-4\">\r\n                                                                    <div className=\"h-10 w-10 rounded-full bg-white/50 dark:bg-black/30 flex items-center justify-center\">\r\n                                                                        <Clock className=\"h-5 w-5 text-cropchain-medium\" />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"flex-grow\">\r\n                                                                    <h4 className=\"font-medium\">{harvest.crop} Harvest</h4>\r\n                                                                    <p className=\"text-sm text-cropchain-medium\">{harvest.region}</p>\r\n                                                                    <div className=\"flex flex-wrap gap-1 mt-1\">\r\n                                                                        {harvest.tokens.map((token) => (\r\n                                                                            <Badge key={token} variant=\"outline\" className=\"bg-cropchain-green/10 border-cropchain-green/20\">\r\n                                                                                {token}\r\n                                                                            </Badge>\r\n                                                                        ))}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"text-right\">\r\n                                                                    <p className=\"font-medium\">\r\n                                                                        {new Date(harvest.date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\r\n                                                                    </p>\r\n                                                                    <p className=\"text-xs text-cropchain-medium\">\r\n                                                                        {Math.ceil((new Date(harvest.date).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24))} days\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                </CardContent>\r\n                                            </Card>\r\n                                        </div>\r\n                                    </div>\r\n                                </TabsContent>\r\n                            </Tabs>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InvestorDashboard;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}